# -*- coding: utf-8 -*-
"""Frequency Analysis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lD1mqA0CMia9H7zlfcROz43dpIWTLi0L
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install librosa

import numpy as np
import librosa
import matplotlib.pyplot as plt

# Define the function for DFT calculation
def dft(x):
    N = len(x)
    X = np.zeros(N, dtype=np.complex_)
    for k in range(N):
        for n in range(N):
            X[k] += x[n] * np.exp(-2j * np.pi * k * n / N)
    return X

# Define the sampling frequencies
fs = [500, 2000, 16000]

# Define the list to store the recorded signals
recordings = []

# Loop over the sampling frequencies, sentences, and group members to record the signals
for f in range(1,4):
    for s in range(1,5):
        for i in range(1, 5):
            filename = f"/content/drive/MyDrive/SNS Project/Raw Recordings/Sentence{s}_Member{i}_Frequency{f}.wav"
            x, sr = librosa.load(filename, sr=None)
            recordings.append(x)
    # Define the frequency range to plot
    freq_range = np.linspace(0, fs[-1]/2, num=len(recordings[0])//2+1)
    # Loop over the recorded signals and calculate the DFT for each signal
    for j, x in enumerate(recordings):
      X = dft(x)
      # Plot the magnitude spectrum of the DFT
      plt.plot(freq_range, np.abs(X[:len(freq_range)]), label=f"Recording {j+1}")
      plt.xlabel("Frequency (Hz)")
      plt.ylabel("|X(f)|")
      plt.title("Magnitude Spectrum of Recorded Signals")
      plt.legend()
      plt.show()